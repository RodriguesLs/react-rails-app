[{"/app/src/App.tsx":"1","/app/src/index.tsx":"2","/app/src/components/header/header.component.tsx":"3","/app/src/components/tasks/tasks.component.jsx":"4","/app/src/components/tasks/list.component.jsx":"5"},{"size":380,"mtime":1611707404345,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1611625167281,"results":"8","hashOfConfig":"7"},{"size":296,"mtime":1611706691944,"results":"9","hashOfConfig":"7"},{"size":1144,"mtime":1611715657883,"results":"10","hashOfConfig":"7"},{"size":1300,"mtime":1611715747603,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x7a3iz",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/app/src/App.tsx",[],"/app/src/index.tsx",[],"/app/src/components/header/header.component.tsx",[],"/app/src/components/tasks/tasks.component.jsx",["23","24"],"import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { ListComponent } from './list.component.jsx'\n\nexport class TasksComponent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tasks: []\n    };\n    this.loadTasks = this.loadTasks.bind(this);\n  }\n\n  async loadTasks() {\n    let response = await fetch('http://localhost:3001/tasks');\n    const tasks = await response.json();\n    this.setState({ tasks: tasks })\n  }\n\n  componentDidMount() {\n    this.loadTasks();\n  }\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col xs={{ span: 8, offset: 2}} className=\"tasks-list\">\n            <p className=\"title\">To-do</p>\n            <ListComponent loadTasks={this.loadTasks} tasks={this.state.tasks.filter(task => task.done != true )} />\n          </Col>\n          <Col xs={{ span: 8, offset: 2 }} className=\"tasks-list\">\n            <p className=\"title\">Done</p>\n            <ListComponent loadTasks={this.loadTasks} tasks={this.state.tasks.filter(task => task.done == true )}/>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","/app/src/components/tasks/list.component.jsx",["25","26","27"],{"ruleId":"28","severity":1,"message":"29","line":31,"column":104,"nodeType":"30","messageId":"31","endLine":31,"endColumn":106},{"ruleId":"28","severity":1,"message":"32","line":35,"column":104,"nodeType":"30","messageId":"31","endLine":35,"endColumn":106},{"ruleId":"28","severity":1,"message":"32","line":25,"column":33,"nodeType":"30","messageId":"31","endLine":25,"endColumn":35},{"ruleId":"33","severity":1,"message":"34","line":26,"column":23,"nodeType":"35","endLine":26,"endColumn":53},{"ruleId":"33","severity":1,"message":"34","line":32,"column":21,"nodeType":"35","endLine":32,"endColumn":96},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]